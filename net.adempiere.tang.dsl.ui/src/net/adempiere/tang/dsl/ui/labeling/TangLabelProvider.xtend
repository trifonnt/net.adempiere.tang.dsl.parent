/*
 * generated by Xtext 2.12.0
 */
package net.adempiere.tang.dsl.ui.labeling

import com.google.inject.Inject
import net.adempiere.tang.dsl.tang.Field
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import net.adempiere.tang.dsl.generator.TangAbstractTypeToJavaTypeConverter

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class TangLabelProvider extends DefaultEObjectLabelProvider {

	// @Trifon
	@Inject
	extension TangAbstractTypeToJavaTypeConverter tangTypeToJavaTypeConverter;

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}

	// @Trifon
	def text(Field field) {
		field.name + 
			if (field.fieldType !== null) {
				"["+(field?.columnName ?: "") +"] : " + field.fieldType.toJavaType;
			} else {
				"";
			}
	}
}
