/*
 * generated by Xtext 2.12.0
 */
package net.adempiere.tang.dsl.formatting2

import com.google.inject.Inject
import net.adempiere.tang.dsl.services.TangGrammarAccess
import net.adempiere.tang.dsl.tang.TangAbstractElement
import net.adempiere.tang.dsl.tang.TangImport
import net.adempiere.tang.dsl.tang.TangModule
import net.adempiere.tang.dsl.tang.TangPackageDeclaration
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class TangFormatter extends AbstractFormatter2 {
	
	@Inject extension TangGrammarAccess

	def dispatch void format(TangModule tangModule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (TangPackageDeclaration tangPackageDeclaration : tangModule.getTangPackages()) {
			tangPackageDeclaration.format;
		}
	}

	def dispatch void format(TangPackageDeclaration tangPackageDeclaration, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (TangImport tangImport : tangPackageDeclaration.getImports()) {
			tangImport.format;
		}
		tangPackageDeclaration.getDefaultValueCalculatorList.format;
		for (TangAbstractElement tangAbstractElement : tangPackageDeclaration.getElements()) {
			tangAbstractElement.format;
		}
	}
	
	// TODO: implement for TangEntity, Field, TangEntityView, TangDefaultValueCalculatorList, TangWindow, Tab
}
