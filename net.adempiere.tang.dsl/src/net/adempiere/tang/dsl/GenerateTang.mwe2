module net.adempiere.tang.dsl.GenerateTang

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "net.adempiere.tang.dsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				web = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "net.adempiere.tang.dsl.Tang"
			fileExtensions = "tang"

			serializer = {
				generateStub = true
			}
			validator = {
				// @Trifon - Enable checking if names are unique!
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			// @Trifon - Enable generation of Eclipse Wizards
			newProjectWizardForEclipse = {
				generate = true
			}
			// @Trifon - Enable generation of net.adempiere.tang.dsl/src/net/adempiere/tang/dsl/generator/Main.xtend
			generator = {
				generateXtendMain = true
			}
			// @Trifon - Generate formatter - net.adempiere.tang.dsl/src/net/adempiere/tang/dsl/formatting2/TangFormatter.xtend
			formatter = {
				generateStub = true
				generateXtendStub = true
			}
		}
	}
}
